import{Vector2 as t,Raycaster as e}from"three";class s{constructor(t,e){this.target=t,this.name=e,this.intersected=!1,this.distance=0}}class n{constructor(t,e=null){this.cancelBubble=!1,this.type=t,this.originalEvent=e}stopPropagation(){this.cancelBubble=!0}}class i{constructor(i,o,c){this.dispose=()=>{domElement.removeEventListener("mousemove",this.onDocumentMouseMove),domElement.removeEventListener("click",this.onDocumentMouseClick),domElement.removeEventListener("mousedown",this.onDocumentMouseDown),domElement.ownerDocument.removeEventListener("mouseup",this.onDocumentMouseUp),domElement.removeEventListener("touchstart",this.onDocumentTouchStart),domElement.removeEventListener("touchmove",this.onDocumentTouchMove),domElement.removeEventListener("touchend",this.onDocumentTouchEnd)},this.add=(t,e=[])=>{if(e.length>0)e.forEach(e=>{const n=t.getObjectByName(e);if(n){const t=new s(n,e);this.interactiveObjects.push(t)}});else if(t){const e=new s(t,t.name);this.interactiveObjects.push(e)}},this.remove=(t,e=[])=>{if(e.length>0){const t=[];this.interactiveObjects.forEach(s=>{e.includes(s.name)||t.push(s)}),this.interactiveObjects=t}else if(t){const e=[];this.interactiveObjects.forEach(s=>{s.name!==t.name&&e.push(s)}),this.interactiveObjects=e}},this.update=()=>{this.raycaster.setFromCamera(this.mouse,this.camera),this.interactiveObjects.forEach(t=>{t.target&&this.checkIntersection(t)}),this.interactiveObjects.sort(function(t,e){return t.distance-e.distance});const t=new n("mouseout");this.interactiveObjects.forEach(e=>{!e.intersected&&e.wasIntersected&&this.dispatch(e,t)});const e=new n("mouseover");this.interactiveObjects.forEach(t=>{t.intersected&&!t.wasIntersected&&this.dispatch(t,e)})},this.checkIntersection=t=>{var e=this.raycaster.intersectObjects([t.target],!0);if(t.wasIntersected=t.intersected,e.length>0){let s=e[0].distance;e.forEach(t=>{t.distance<s&&(s=t.distance)}),t.intersected=!0,t.distance=s}else t.intersected=!1},this.onDocumentMouseMove=t=>{this.mapPositionToPoint(this.mouse,t.clientX,t.clientY);const e=new n("mousemove",t);this.interactiveObjects.forEach(t=>{this.dispatch(t,e)})},this.onDocumentTouchMove=t=>{this.mapPositionToPoint(this.mouse,t.touches[0].clientX,t.touches[0].clientY);const e=new n(this.treatTouchEventsAsMouseEvents?"mousemove":"touchmove",t);this.interactiveObjects.forEach(t=>{this.dispatch(t,e)})},this.onDocumentMouseClick=t=>{this.update();const e=new n("click",t);this.interactiveObjects.forEach(t=>{t.intersected&&this.dispatch(t,e)})},this.onDocumentMouseDown=t=>{this.update();const e=new n("mousedown",t);this.interactiveObjects.forEach(t=>{t.intersected&&this.dispatch(t,e)})},this.onDocumentTouchStart=t=>{this.mapPositionToPoint(this.mouse,t.touches[0].clientX,t.touches[0].clientY),this.update();const e=new n(this.treatTouchEventsAsMouseEvents?"mousedown":"touchstart",t);this.interactiveObjects.forEach(t=>{t.intersected&&this.dispatch(t,e)})},this.onDocumentMouseUp=t=>{const e=new n("mouseup",t);this.interactiveObjects.forEach(t=>{this.dispatch(t,e)})},this.onDocumentTouchEnd=t=>{this.mapPositionToPoint(this.mouse,t.touches[0].clientX,t.touches[0].clientY),this.update();const e=new n(this.treatTouchEventsAsMouseEvents?"mouseup":"touchend",t);this.interactiveObjects.forEach(t=>{this.dispatch(t,e)})},this.dispatch=(t,e)=>{t.target&&!e.cancelBubble&&(e.coords=this.mouse,e.distance=t.distance,e.intersected=t.intersected,t.target.dispatchEvent(e))},this.mapPositionToPoint=(t,e,s)=>{let n;n=this.renderer.domElement.parentElement?this.renderer.domElement.getBoundingClientRect():{x:0,y:0,left:0,top:0,width:0,height:0},t.x=(e-n.left)/n.width*2-1,t.y=-(s-n.top)/n.height*2+1},this.renderer=i,this.camera=o,this.domElement=c,this.mouse=new t,this.interactiveObjects=[],this.raycaster=new e,c.addEventListener("mousemove",this.onDocumentMouseMove,!1),c.addEventListener("click",this.onDocumentMouseClick,!1),c.addEventListener("mousedown",this.onDocumentMouseDown,!1),c.ownerDocument.addEventListener("mouseup",this.onDocumentMouseUp,!1),c.addEventListener("touchstart",this.onDocumentTouchStart,!1),c.addEventListener("touchmove",this.onDocumentTouchMove,!1),c.addEventListener("touchend",this.onDocumentTouchEnd,!1),this.treatTouchEventsAsMouseEvents=!0}}export{i as InteractionManager,n as InteractiveEvent,s as InteractiveObject};
//# sourceMappingURL=three-interactive.modern.js.map
